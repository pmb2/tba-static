# Nginx configuration for n8n with Let's Encrypt SSL
# Place in /etc/nginx/sites-available/n8n.conf
# Then create a symlink: ln -s /etc/nginx/sites-available/n8n.conf /etc/nginx/sites-enabled/
# After that, test and reload: nginx -t && systemctl reload nginx

server {
    listen 80;
    server_name n8n.backus.agency;
    
    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
    
    # Allow Let's Encrypt authentication challenges
    location ~ /.well-known/acme-challenge {
        allow all;
        root /var/www/html;
    }
}

server {
    listen 443 ssl http2;
    server_name n8n.backus.agency;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/n8n.backus.agency/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/n8n.backus.agency/privkey.pem;
    
    # Modern SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    
    # SSL session settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Diffie-Hellman parameters for DHE ciphersuites
    ssl_dhparam /etc/nginx/dhparam.pem;  # Generate with: openssl dhparam -out /etc/nginx/dhparam.pem 2048
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    
    # Proxy settings for n8n
    location / {
        proxy_pass http://localhost:5678;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # WebSocket support
        proxy_set_header Connection "Upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Allow large uploads
    client_max_body_size 100M;
    
    # Optional: serve robots.txt and favicon.ico
    location = /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
    }
    
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    
    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
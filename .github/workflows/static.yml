# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Move out directory content to root for deployment
        run: |
          # Create a directory to store the correctly structured content
          mkdir -p ./gh-pages
          
          # Copy everything from out to the gh-pages directory
          cp -r ./out/* ./gh-pages/
          
          # Create necessary files
          touch ./gh-pages/.nojekyll
          echo "backus.agency" > ./gh-pages/CNAME
          
          # Add CSS variables directly to avoid JavaScript dependency
          cat > ./gh-pages/variables.css << EOF
          :root {
            --primary: #3498db;
            --secondary: #2ecc71;
            --secondary-light: #4cd787;
            --primary-foreground: #ffffff;
          }
          EOF
          
          # Add this CSS file to all HTML files
          find ./gh-pages -name "*.html" | while read file; do
            sed -i 's#</head>#<link rel="stylesheet" href="/variables.css">\n<meta name="github-repo-owner" content="TheBackusAgency">\n<meta name="github-repo-name" content="tba-static">\n</head>#' "$file"
          done
          
          # Simple form handler that avoids JavaScript complexity
          cat > ./gh-pages/form-handler.js << EOF
          document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('form').forEach(function(form) {
              form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Get form data
                const formData = {};
                new FormData(form).forEach((value, key) => {
                  formData[key] = value;
                });
                
                // Create issue URL
                const issueBody = encodeURIComponent(Object.entries(formData)
                  .map(([key, value]) => key + ': "' + value + '"')
                  .join('\\n'));
                
                const url = 'https://github.com/TheBackusAgency/tba-static/issues/new?title=Form+Submission&body=' + issueBody;
                
                // Open in new window
                window.open(url, '_blank');
                
                // Show success alert
                alert('Form submitted successfully!');
                
                // Reset form
                form.reset();
              });
            });
          });
          EOF
          
          # Add the form handler to HTML files with forms
          find ./gh-pages -name "*.html" | while read file; do
            if grep -q "<form" "$file"; then
              sed -i 's#</body>#<script src="/form-handler.js"></script></body>#' "$file"
            fi
          done
          
          # Create 404 page if it doesn't exist
          if [ ! -f "./gh-pages/404.html" ]; then
            cp ./gh-pages/index.html ./gh-pages/404.html
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the gh-pages directory
          path: './gh-pages'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
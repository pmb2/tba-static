# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      # Prepare build environment
      - name: Install dependencies
        run: |
          # Check if package.json exists and run npm install if it does
          if [ -f "package.json" ]; then
            npm ci
          fi
      
      # Build the site (if needed)
      - name: Build site
        run: |
          # Run build command if package.json exists with a build script
          if [ -f "package.json" ] && grep -q '"build"' package.json; then
            npm run build
          fi
      
      # Create essential files if they don't exist
      - name: Setup essential files
        run: |
          # Ensure all necessary directories exist
          mkdir -p js
          
          # Create necessary JavaScript files if they don't exist
          if [ ! -f "js/modal.js" ]; then
            cp -f js/modal.js js/ 2>/dev/null || echo "// Modal script" > js/modal.js
          fi
          
          if [ ! -f "js/form-handler.js" ]; then
            cp -f js/form-handler.js js/ 2>/dev/null || echo "// Form handler script" > js/form-handler.js
          fi
          
          if [ ! -f "form-fixer.js" ]; then
            cp -f form-fixer.js . 2>/dev/null || echo "// Form fixer script" > form-fixer.js
          fi
          
          if [ ! -f "path-fixer.js" ]; then
            cp -f path-fixer.js . 2>/dev/null || echo "// Path fixer script" > path-fixer.js
          fi
          
          # Ensure GitHub Pages uses the right domain and doesn't use Jekyll
          touch .nojekyll
          echo "backus.agency" > CNAME
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload from the root directory
          path: '.'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4